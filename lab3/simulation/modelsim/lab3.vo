// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "03/22/2017 17:11:09"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab3_top (
	vga_hs,
	clk_50,
	rst,
	vga_vs,
	vga_clk,
	vga_sync,
	vga_blank,
	vga_b,
	vga_g,
	vga_r);
output 	vga_hs;
input 	clk_50;
input 	rst;
output 	vga_vs;
output 	vga_clk;
output 	vga_sync;
output 	vga_blank;
output 	[7:0] vga_b;
output 	[7:0] vga_g;
output 	[7:0] vga_r;

// Design Ports Information
// vga_hs	=>  Location: PIN_AJ4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_vs	=>  Location: PIN_AC29,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_clk	=>  Location: PIN_AB23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_sync	=>  Location: PIN_AH25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_blank	=>  Location: PIN_W16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[7]	=>  Location: PIN_AC14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[6]	=>  Location: PIN_AE22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[5]	=>  Location: PIN_AE24,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[4]	=>  Location: PIN_AD11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[3]	=>  Location: PIN_AF28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[2]	=>  Location: PIN_AK29,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[1]	=>  Location: PIN_AA12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_b[0]	=>  Location: PIN_AC27,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[7]	=>  Location: PIN_W19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[6]	=>  Location: PIN_AJ20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[5]	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[4]	=>  Location: PIN_AG17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[3]	=>  Location: PIN_D10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[2]	=>  Location: PIN_AG6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[1]	=>  Location: PIN_Y18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_g[0]	=>  Location: PIN_G10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[7]	=>  Location: PIN_AH12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[6]	=>  Location: PIN_C2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[5]	=>  Location: PIN_Y23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[4]	=>  Location: PIN_AC20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[3]	=>  Location: PIN_AG5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[2]	=>  Location: PIN_AF11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[1]	=>  Location: PIN_AF21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// vga_r[0]	=>  Location: PIN_AG23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_50	=>  Location: PIN_AF14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst	=>  Location: PIN_AG7,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \clk_50~input_o ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ;
wire \rst~input_o ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6 ;
wire \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7 ;
wire \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ;
wire [0:0] \inst7|vga_clk_inst|altera_pll_i|fboutclk_wire ;
wire [0:0] \inst7|vga_clk_inst|altera_pll_i|outclk_wire ;

wire [7:0] \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus ;
wire [7:0] \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus ;
wire [8:0] \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus ;

assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [0];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [1];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [2];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [3];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [4];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [5];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [6];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [7];

assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [0];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [1];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [2];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [3];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [4];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [5];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [6];
assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [7];

assign \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5  = \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus [5];

// Location: IOOBUF_X22_Y0_N36
cyclonev_io_obuf \vga_hs~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_hs),
	.obar());
// synopsys translate_off
defparam \vga_hs~output .bus_hold = "false";
defparam \vga_hs~output .open_drain_output = "false";
defparam \vga_hs~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y20_N96
cyclonev_io_obuf \vga_vs~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_vs),
	.obar());
// synopsys translate_off
defparam \vga_vs~output .bus_hold = "false";
defparam \vga_vs~output .open_drain_output = "false";
defparam \vga_vs~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y9_N22
cyclonev_io_obuf \vga_clk~output (
	.i(\inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_clk),
	.obar());
// synopsys translate_off
defparam \vga_clk~output .bus_hold = "false";
defparam \vga_clk~output .open_drain_output = "false";
defparam \vga_clk~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y0_N53
cyclonev_io_obuf \vga_sync~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_sync),
	.obar());
// synopsys translate_off
defparam \vga_sync~output .bus_hold = "false";
defparam \vga_sync~output .open_drain_output = "false";
defparam \vga_sync~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X52_Y0_N19
cyclonev_io_obuf \vga_blank~output (
	.i(vcc),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_blank),
	.obar());
// synopsys translate_off
defparam \vga_blank~output .bus_hold = "false";
defparam \vga_blank~output .open_drain_output = "false";
defparam \vga_blank~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y0_N19
cyclonev_io_obuf \vga_b[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[7]),
	.obar());
// synopsys translate_off
defparam \vga_b[7]~output .bus_hold = "false";
defparam \vga_b[7]~output .open_drain_output = "false";
defparam \vga_b[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y0_N2
cyclonev_io_obuf \vga_b[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[6]),
	.obar());
// synopsys translate_off
defparam \vga_b[6]~output .bus_hold = "false";
defparam \vga_b[6]~output .open_drain_output = "false";
defparam \vga_b[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X88_Y0_N54
cyclonev_io_obuf \vga_b[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[5]),
	.obar());
// synopsys translate_off
defparam \vga_b[5]~output .bus_hold = "false";
defparam \vga_b[5]~output .open_drain_output = "false";
defparam \vga_b[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X2_Y0_N42
cyclonev_io_obuf \vga_b[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[4]),
	.obar());
// synopsys translate_off
defparam \vga_b[4]~output .bus_hold = "false";
defparam \vga_b[4]~output .open_drain_output = "false";
defparam \vga_b[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y13_N56
cyclonev_io_obuf \vga_b[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[3]),
	.obar());
// synopsys translate_off
defparam \vga_b[3]~output .bus_hold = "false";
defparam \vga_b[3]~output .open_drain_output = "false";
defparam \vga_b[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X82_Y0_N93
cyclonev_io_obuf \vga_b[2]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[2]),
	.obar());
// synopsys translate_off
defparam \vga_b[2]~output .bus_hold = "false";
defparam \vga_b[2]~output .open_drain_output = "false";
defparam \vga_b[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N2
cyclonev_io_obuf \vga_b[1]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[1]),
	.obar());
// synopsys translate_off
defparam \vga_b[1]~output .bus_hold = "false";
defparam \vga_b[1]~output .open_drain_output = "false";
defparam \vga_b[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y16_N22
cyclonev_io_obuf \vga_b[0]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_b[0]),
	.obar());
// synopsys translate_off
defparam \vga_b[0]~output .bus_hold = "false";
defparam \vga_b[0]~output .open_drain_output = "false";
defparam \vga_b[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X80_Y0_N19
cyclonev_io_obuf \vga_g[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[7]),
	.obar());
// synopsys translate_off
defparam \vga_g[7]~output .bus_hold = "false";
defparam \vga_g[7]~output .open_drain_output = "false";
defparam \vga_g[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X62_Y0_N36
cyclonev_io_obuf \vga_g[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[6]),
	.obar());
// synopsys translate_off
defparam \vga_g[6]~output .bus_hold = "false";
defparam \vga_g[6]~output .open_drain_output = "false";
defparam \vga_g[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y81_N53
cyclonev_io_obuf \vga_g[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[5]),
	.obar());
// synopsys translate_off
defparam \vga_g[5]~output .bus_hold = "false";
defparam \vga_g[5]~output .open_drain_output = "false";
defparam \vga_g[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X50_Y0_N93
cyclonev_io_obuf \vga_g[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[4]),
	.obar());
// synopsys translate_off
defparam \vga_g[4]~output .bus_hold = "false";
defparam \vga_g[4]~output .open_drain_output = "false";
defparam \vga_g[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y81_N59
cyclonev_io_obuf \vga_g[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[3]),
	.obar());
// synopsys translate_off
defparam \vga_g[3]~output .bus_hold = "false";
defparam \vga_g[3]~output .open_drain_output = "false";
defparam \vga_g[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N53
cyclonev_io_obuf \vga_g[2]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[2]),
	.obar());
// synopsys translate_off
defparam \vga_g[2]~output .bus_hold = "false";
defparam \vga_g[2]~output .open_drain_output = "false";
defparam \vga_g[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X72_Y0_N2
cyclonev_io_obuf \vga_g[1]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[1]),
	.obar());
// synopsys translate_off
defparam \vga_g[1]~output .bus_hold = "false";
defparam \vga_g[1]~output .open_drain_output = "false";
defparam \vga_g[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X6_Y81_N2
cyclonev_io_obuf \vga_g[0]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_g[0]),
	.obar());
// synopsys translate_off
defparam \vga_g[0]~output .bus_hold = "false";
defparam \vga_g[0]~output .open_drain_output = "false";
defparam \vga_g[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X38_Y0_N36
cyclonev_io_obuf \vga_r[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[7]),
	.obar());
// synopsys translate_off
defparam \vga_r[7]~output .bus_hold = "false";
defparam \vga_r[7]~output .open_drain_output = "false";
defparam \vga_r[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y81_N53
cyclonev_io_obuf \vga_r[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[6]),
	.obar());
// synopsys translate_off
defparam \vga_r[6]~output .bus_hold = "false";
defparam \vga_r[6]~output .open_drain_output = "false";
defparam \vga_r[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y13_N5
cyclonev_io_obuf \vga_r[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[5]),
	.obar());
// synopsys translate_off
defparam \vga_r[5]~output .bus_hold = "false";
defparam \vga_r[5]~output .open_drain_output = "false";
defparam \vga_r[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X76_Y0_N2
cyclonev_io_obuf \vga_r[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[4]),
	.obar());
// synopsys translate_off
defparam \vga_r[4]~output .bus_hold = "false";
defparam \vga_r[4]~output .open_drain_output = "false";
defparam \vga_r[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N36
cyclonev_io_obuf \vga_r[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[3]),
	.obar());
// synopsys translate_off
defparam \vga_r[3]~output .bus_hold = "false";
defparam \vga_r[3]~output .open_drain_output = "false";
defparam \vga_r[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X18_Y0_N42
cyclonev_io_obuf \vga_r[2]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[2]),
	.obar());
// synopsys translate_off
defparam \vga_r[2]~output .bus_hold = "false";
defparam \vga_r[2]~output .open_drain_output = "false";
defparam \vga_r[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X70_Y0_N19
cyclonev_io_obuf \vga_r[1]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[1]),
	.obar());
// synopsys translate_off
defparam \vga_r[1]~output .bus_hold = "false";
defparam \vga_r[1]~output .open_drain_output = "false";
defparam \vga_r[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X64_Y0_N36
cyclonev_io_obuf \vga_r[0]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(vga_r[0]),
	.obar());
// synopsys translate_off
defparam \vga_r[0]~output .bus_hold = "false";
defparam \vga_r[0]~output .open_drain_output = "false";
defparam \vga_r[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X32_Y0_N1
cyclonev_io_ibuf \clk_50~input (
	.i(clk_50),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk_50~input_o ));
// synopsys translate_off
defparam \clk_50~input .bus_hold = "false";
defparam \clk_50~input .simulate_z_as = "z";
// synopsys translate_on

// Location: PLLREFCLKSELECT_X0_Y21_N0
cyclonev_pll_refclk_select \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT (
	.adjpllin(gnd),
	.cclk(gnd),
	.coreclkin(gnd),
	.extswitch(gnd),
	.iqtxrxclkin(gnd),
	.plliqclkin(gnd),
	.rxiqclkin(gnd),
	.clkin({gnd,gnd,gnd,\clk_50~input_o }),
	.refiqclk(2'b00),
	.clk0bad(),
	.clk1bad(),
	.clkout(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ),
	.extswitchbuf(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ),
	.pllclksel());
// synopsys translate_off
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_auto_clk_sw_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_loss_edge = "both_edges";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_loss_sw_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_sw_dly = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clkin_0_src = "clk_0";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clkin_1_src = "ref_clk1";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_manu_clk_sw_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_sw_refclk_src = "clk_0";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N92
cyclonev_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FRACTIONALPLL_X0_Y15_N0
cyclonev_fractional_pll \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL (
	.coreclkfb(\inst7|vga_clk_inst|altera_pll_i|fboutclk_wire [0]),
	.ecnc1test(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ),
	.ecnc2test(gnd),
	.fbclkfpll(gnd),
	.lvdsfbin(gnd),
	.nresync(\rst~input_o ),
	.pfden(gnd),
	.refclkin(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ),
	.shift(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftdonein(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiften(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ),
	.up(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.zdb(gnd),
	.cntnen(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.fbclk(\inst7|vga_clk_inst|altera_pll_i|fboutclk_wire [0]),
	.fblvdsout(),
	.lock(),
	.mcntout(),
	.plniotribuf(),
	.shiftdoneout(),
	.tclk(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ),
	.mhi(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus ),
	.vcoph(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus ));
// synopsys translate_off
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .dsm_accumulator_reset_value = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .forcelock = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .mimic_fbclk_type = "none";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .nreset_invert = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .output_clock_frequency = "300.0 mhz";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_atb = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_bwctrl = 4000;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cmp_buf_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cp_comp = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cp_current = 10;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ctrl_override_setting = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_dither = "disable";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_out_sel = "disable";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_reset = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ecn_bypass = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ecn_test_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_enable = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fbclk_mux_1 = "glb";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fbclk_mux_2 = "m_cnt";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_carry_out = 32;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_division = 1;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_division_string = "'0'";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_value_ready = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lf_testen = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lock_fltr_cfg = 25;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lock_fltr_test = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_bypass_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_coarse_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_fine_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_hi_div = 6;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_in_src = "ph_mux_clk";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_lo_div = 6;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_odd_div_duty_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_ph_mux_prst = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_prst = 1;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_bypass_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_coarse_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_fine_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_hi_div = 1;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_lo_div = 1;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_odd_div_duty_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ref_buf_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_reg_boost = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_regulator_bypass = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ripplecap_ctrl = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_slf_rst = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_tclk_mux_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_tclk_sel = "n_src";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_test_enable = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_testdn_enable = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_testup_enable = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_unlock_fltr_cfg = 2;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_div = 2;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph0_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph1_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph2_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph3_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph4_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph5_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph6_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph7_en = "true";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vctrl_test_voltage = 750;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .reference_clock_frequency = "50.0 mhz";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd0g_atb = "disable";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd0g_output = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd1g_atb = "disable";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd1g_output = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccm1g_tap = 2;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccr_pd = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vcodiv_override = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .fractional_pll_index = 0;
// synopsys translate_on

// Location: PLLRECONFIG_X0_Y19_N0
cyclonev_pll_reconfig \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG (
	.atpgmode(gnd),
	.clk(gnd),
	.cntnen(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.fpllcsrtest(gnd),
	.iocsrclkin(gnd),
	.iocsrdatain(gnd),
	.iocsren(gnd),
	.iocsrrstn(gnd),
	.mdiodis(gnd),
	.phaseen(gnd),
	.read(gnd),
	.rstn(gnd),
	.scanen(gnd),
	.sershiftload(gnd),
	.shiftdonei(gnd),
	.updn(gnd),
	.write(gnd),
	.addr(6'b000000),
	.byteen(2'b00),
	.cntsel(5'b00000),
	.din(16'b0000000000000000),
	.mhi({\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5 ,
\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2 ,
\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0 }),
	.blockselect(),
	.iocsrdataout(),
	.iocsrenbuf(),
	.iocsrrstnbuf(),
	.phasedone(),
	.shift(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftenm(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ),
	.up(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.dout(),
	.dprioout(),
	.shiften(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus ));
// synopsys translate_off
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG .fractional_pll_index = 0;
// synopsys translate_on

// Location: PLLOUTPUTCOUNTER_X0_Y19_N1
cyclonev_pll_output_counter \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER (
	.cascadein(gnd),
	.nen0(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.shift0(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftdone0i(gnd),
	.shiften(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5 ),
	.tclk0(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ),
	.up0(\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.vco0ph({\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5 ,
\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2 ,
\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1 ,\inst7|vga_clk_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0 }),
	.cascadeout(),
	.divclk(\inst7|vga_clk_inst|altera_pll_i|outclk_wire [0]),
	.shiftdone0o());
// synopsys translate_off
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_coarse_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_fine_dly = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_in_src = "ph_mux_clk";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_ph_mux_prst = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_prst = 1;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .cnt_fpll_src = "fpll_0";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_bypass_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_hi_div = 6;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_lo_div = 6;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_odd_div_even_duty_en = "false";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .duty_cycle = 50;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .output_clock_frequency = "25.0 mhz";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .phase_shift = "0 ps";
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .fractional_pll_index = 0;
defparam \inst7|vga_clk_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .output_counter_index = 5;
// synopsys translate_on

// Location: CLKCTRL_G7
cyclonev_clkena \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 (
	.inclk(\inst7|vga_clk_inst|altera_pll_i|outclk_wire [0]),
	.ena(vcc),
	.outclk(\inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .clock_type = "global clock";
defparam \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .disable_mode = "low";
defparam \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .ena_register_mode = "always enabled";
defparam \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .ena_register_power_up = "high";
defparam \inst7|vga_clk_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: LABCELL_X61_Y33_N0
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on


altera_pll_reconfig_tasks pll_reconfig_inst_tasks();
// synopsys translate_off
defparam pll_reconfig_inst_tasks .number_of_fplls = 1;
// synopsys translate_on

endmodule
